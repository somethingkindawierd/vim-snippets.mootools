snippet request Clean
	new Request({
		url: '${1:url}'
	})${2};

snippet request HTML
	new Request.HTML({
		url: '${1:url}',
		update: '${2:element_id}'
	})${3};

snippet request JSON
	new Request.JSON({
		url: '${1:url}',
		onSuccess: function(response) {
			${2}
		}
	})${3};

snippet class Clean
	new Class({
		initialize: function(${1:arguments}) {
			${2}
		} 
	});

snippet class Options
	new Class({
		Implements: [Options],
		options: {
			${1:option_key}: ${2:option_value}
		},
		initialize: function(options) {
			${3}
		} 
	});

snippet class Implements
	new Class({
		Implements: [${1:implemented_classes}],
		initialize: function(${2:arguments}) {
			${3}
		} 
	});

snippet class Extends
	new Class({
		Extends: ${1:extended_class},
		initialize: function(${2:arguments}) {
			${3}
		} 
	});
	
snippet class Occlude
	new Class({
		Implements: [Class.Occlude],
		property: '${1:storage_key}',
		initialize: function(el) {
			this.element = $(el);
			if (this.occlude()) return this.occluded;
			${2}
		},
		toElement: function() {
			return this.element;
		}
	});

snippet class Options Implements
	new Class({
		Implements: [Options, ${1:implemented_classes}],
		options: {
			${2:option_key}: ${3:option_value}
		},
		initialize: function(options) {
			this.setOptions(options);
			${4}
		} 
	});

snippet class Options Implements Extends
	new Class({
		Extends: ${1:extended_class},
		Implements: [Options, ${2:implemented_classes}],
		options: {
			${3:option_key}: ${4:option_value}
		},
		initialize: function(options) {
			this.setOptions(options);
			${5}
		} 
	});

